<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="DarkToolBarStyle" TargetType="{x:Type StackPanel}">
		<Style.Setters>
			<Setter Property="Orientation" Value="Horizontal"/>
			<Setter Property="Height" Value="32"/>
			<Setter Property="Margin" Value="8,0,8,0"/>
			<Setter Property="Background" Value="Transparent"/>
		</Style.Setters>
	</Style>

	<Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Height="{TemplateBinding Height}" Width="1"        
                           Fill="#4C4C4C" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#F0F0F0"/>
	</Style>

	<Color x:Key="WindowColor">#FFE8EDF9</Color>
	<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
	<Color x:Key="BorderMediumColor">#FF888888</Color>
	<Color x:Key="ControlLightColor">White</Color>
	<Color x:Key="ControlMediumColor">#595959</Color>
	<Color x:Key="ControlPressedColor">#FF211AA9</Color>
	<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
	<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
	<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

	<!--<SnippetToolBar>-->
  <Style x:Key="ToolBarButtonBaseStyle"
         TargetType="{x:Type ButtonBase}">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
		<Setter Property="Foreground" Value="#F0F0F0"/>
		<Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
					<Grid>
						<Border x:Name="CheckBorder" Margin="1,5,1,5" BorderThickness="1" Background="Transparent" BorderBrush="Transparent">
						</Border>
						
						<Border x:Name="Border" Margin="1,5,1,5"
                  BorderThickness="1" Background="Transparent" BorderBrush="Transparent">

						
            <ContentPresenter Margin="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True" />
	          </Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#4000" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#80F0F0F0" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#20FFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#80F0F0F0" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckBorder"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#40000000" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckBorder"
                                                Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="#80F0F0F0" />
										</ColorAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

					</Grid>
				</ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type Button}" />
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
         BasedOn="{StaticResource ToolBarButtonBaseStyle}"
         TargetType="{x:Type RadioButton}" />

	<!--
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
         TargetType="{x:Type TextBox}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="OverridesDefaultStyle"
            Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
    <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
    <Setter Property="AllowDrop"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border x:Name="Border"
                  Padding="2"
                  BorderThickness="1">
            <Border.Background>
              <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
            </Border.Background>
            <Border.BorderBrush>
              <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
            </Border.BorderBrush>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).  
                      (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledControlDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Border.BorderBrush).  
                      (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledBorderLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer Margin="0"
                          x:Name="PART_ContentHost" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
-->
  <Style x:Key="ToolBarThumbStyle"
         TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Cursor"
            Value="SizeAll" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent"
                  SnapsToDevicePixels="True">
            <Rectangle Margin="0,2">
              <Rectangle.Fill>
                <DrawingBrush Viewport="0,0,4,4"
                              ViewportUnits="Absolute"
                              Viewbox="0,0,8,8"
                              ViewboxUnits="Absolute"
                              TileMode="Tile">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="#AAA"
                                       Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Rectangle.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToolBarOverflowButtonStyle"
         TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Border"
                  CornerRadius="0,3,3,0"
                  SnapsToDevicePixels="true">
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                <GradientStop Color="#00000000"
                              Offset="0" />
                <GradientStop Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).    
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlPressedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).     
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlMouseOverColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).   
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledBorderLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Path x:Name="Arrow"
                    Fill="Black"
                    VerticalAlignment="Bottom"
                    Margin="2,3"
                    Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
              <ContentPresenter />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ToolBar}"
         TargetType="{x:Type ToolBar}">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Border x:Name="Border"
                  CornerRadius="2"
                  BorderThickness="0">
            <Border.BorderBrush>
              <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="{DynamicResource BorderMediumColor}"
                                  Offset="0.0" />
                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1.0" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.BorderBrush>

            <Border.Background>
							<SolidColorBrush Color="{DynamicResource ControlMediumColor}"/>
            </Border.Background>
            <DockPanel>
              <ToggleButton DockPanel.Dock="Right"
                            IsEnabled="{TemplateBinding HasOverflowItems}"
                            Style="{StaticResource ToolBarOverflowButtonStyle}"
                            ClickMode="Press"
                            IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, 
                RelativeSource={RelativeSource TemplatedParent}}">
                <Popup x:Name="OverflowPopup"
                       AllowsTransparency="true"
                       Placement="Bottom"
                       StaysOpen="false"
                       Focusable="false"
                       PopupAnimation="Slide"
                       IsOpen="{Binding IsOverflowOpen, 
                  RelativeSource={RelativeSource TemplatedParent}}">
                  <Border x:Name="DropDownBorder"
                          BorderThickness="1">
                    <Border.BorderBrush>
                      <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                    </Border.BorderBrush>
                    <Border.Background>
                      <LinearGradientBrush EndPoint="0.5,1"
                                           StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                      Offset="1" />
                      </LinearGradientBrush>
                    </Border.Background>
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                          Margin="2"
                                          WrapWidth="200"
                                          Focusable="true"
                                          FocusVisualStyle="{x:Null}"
                                          KeyboardNavigation.TabNavigation="Cycle"
                                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </Border>
                </Popup>
              </ToggleButton>

              <Thumb x:Name="ToolBarThumb"
                     Style="{StaticResource ToolBarThumbStyle}"
                     Width="10" />
              <ToolBarPanel x:Name="PART_ToolBarPanel"
                            IsItemsHost="true"
                            Margin="0,0,2,0" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen"
                     Value="true">
              <Setter TargetName="ToolBarThumb"
                      Property="IsEnabled"
                      Value="false" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked"
                     Value="true">
              <Setter TargetName="ToolBarThumb"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ToolBarTray}"
         TargetType="{x:Type ToolBarTray}">
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{StaticResource BorderMediumColor}"/>
			</Setter.Value>
		</Setter>
	</Style>
  <!--</SnippetToolBar>-->
</ResourceDictionary>
